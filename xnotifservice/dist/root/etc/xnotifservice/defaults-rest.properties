# HTTP Client
integration.httpClient.request.connectionRequestTimeout=10s
integration.httpClient.request.connectTimeout=2s
integration.httpClient.request.socketTimeout=30s

integration.httpClient.connections.maxTotal=100
integration.httpClient.connections.maxPerRoute=50

# Load Balancing
integration.ribbon.serverListRefreshInterval=5000

integration.ribbon.retryEnabled=true
integration.ribbon.maxAutoRetries=0
integration.ribbon.maxAutoRetriesNextServer=1
integration.ribbon.okToRetryOnAllOperations=false
integration.ribbon.retryableStatusCodes=500

# Rest Client
# integration.rest.logger.details-level support full|headers|minimum
integration.rest.logger.details-level=headers
integration.rest.logger.exclude-headers=

### Following values are used by RestTemplate, Feign and Zuul
# Interval to refresh the server list from the source
ribbon.ServerListRefreshInterval=${integration.ribbon.server-list-refresh-interval:5000}

### Following values are used by RestTemplate and Zuul, might not be used by Feign (it got its own retry logic)
### By default, we map it to 'integration.ribbon.*'
spring.cloud.loadbalancer.retry.enabled=${integration.ribbon.retry-enabled:true}
# Max number of retries on the same server (excluding the first try)
ribbon.MaxAutoRetries=${integration.ribbon.max-auto-retries:0}
# Max number of next servers to retry (excluding the first server)
ribbon.MaxAutoRetriesNextServer=${integration.ribbon.max-auto-retries-next-server:1}
# Whether to retry all operations (i.e. HTTP methods).  When true, all requests are eligible for retry.
# When false, only GET requests can be retried.
ribbon.OkToRetryOnAllOperations=${integration.ribbon.ok-to-retry-on-all-operations:false}
# List of status code that should be retried
ribbon.retryableStatusCodes=${integration.ribbon.retryable-status-codes:}

### Following values are not used by RestTemplate but might be used by Feign or Zuul
ribbon.ReadTimeout=10000
ribbon.ConnectTimeout=2000

# Following values are deprecated in 3.6.0
#remoteservice.socket.connectiontimeout.millis=10000
#remoteservice.socket.readtimeout.millis=10000
#remoteservice.max.connections.per.host=50
#remoteservice.max.total.connections=100