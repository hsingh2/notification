# Server
server.use-forward-headers=true

# Discovery
spring.cloud.consul.discovery.instanceId=${spring.application.name}-${local.server.port:${server.port:0}}-${spring.application.index}
spring.cloud.consul.discovery.fail-fast=true
spring.cloud.consul.discovery.health-check-path=${server.servlet.context-path:}${management.endpoints.web.base-path:}/health
spring.cloud.consul.discovery.health-check-interval=15s
spring.cloud.consul.discovery.port=${management.server.port}

# Cloud config
spring.cloud.consul.config.fail-fast=true
spring.cloud.consul.config.prefix=userviceconfiguration
spring.cloud.consul.config.default-context=defaultapplication

# Vault
spring.cloud.vault.enabled=true
spring.cloud.vault.reactive.enabled=false
spring.cloud.vault.order=1
spring.cloud.vault.connection-timeout=5000
spring.cloud.vault.read-timeout=15000
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.backend-version=1
spring.cloud.vault.kv.profile-separator=/
spring.cloud.vault.kv.default-context=defaultapplication
spring.cloud.vault.generic.enabled=false

# Logging
# To replace the MDC logging block with specific MDC based logging parameters, replace [%mdc] with something like
# [txnId=%mdc{Cisco-Transaction-Id:-na}] [tenantId=%mdc{Transaction-Id:-na}] to log Cisco-Transaction-Id and
# Transaction-Id respectively.  The pattern is key:value pair within square brackets with literal title and MDC
# field with default of '-na' if there is no value in MDC.
logging.pattern.console=%clr(%d{yyyy-MM-dd'T'HH:mm:ss.SSS,UTC}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} [%mdc] %msg%n%ex{full}

# Performance optimization
spring.main.lazy-initialization=true
optimization.auto-config.filter.excludes.reactive=.*Reactive.*

# Disable spring-cloud-function
spring.cloud.function.scan.enabled=false
spring.cloud.function.definition=none
optimization.auto-config.filter.excludes.function=org.springframework.cloud.function\\..*|org.springframework.cloud.stream.function\\..*